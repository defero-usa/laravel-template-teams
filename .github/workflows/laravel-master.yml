name: Adtrexa - PROD

on:
  push:
    branches: [ master ]

jobs:
  PHPUnit:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0.21
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: testing
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    strategy:
      fail-fast: true
      matrix:
        php: [ 7.4, 8.0 ]
        node: [ 14.0 ]

    name: PHP ${{ matrix.php }} - PHPUnit

    steps:
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip
          tools: composer:v2
          coverage: xdebug

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Install Dependencies
        run: |
          composer config "http-basic.nova.laravel.com" "${{ secrets.NOVA_USERNAME }}" "${{ secrets.NOVA_PASSWORD }}"
          composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Generate key
        run: php artisan key:generate

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Create Database
        run: |
          mkdir -p database
          touch database/database.sqlite

      - name: NPM Install & Compile
        run: |
          npm i
          npm run dev

      - name: PHPUnit
        run: vendor/bin/phpunit

  LaravelDusk:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0.21
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: testing
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    strategy:
      fail-fast: true
      matrix:
        php: [ 8.0 ]

    name: PHP ${{ matrix.php }} - Laravel Dusk

    steps:
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip
          tools: composer:v2
          coverage: xdebug

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Install Dependencies
        run: |
          composer config "http-basic.nova.laravel.com" "${{ secrets.NOVA_USERNAME }}" "${{ secrets.NOVA_PASSWORD }}"
          composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Generate key
        run: php artisan key:generate

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: NPM Install & Compile
        run: |
          npm i
          npm run dev

      - name: Setup Dusk
        run: |
          php artisan dusk:chrome-driver
          php artisan serve  > /dev/null 2>&1 &
          curl localhost:8000 &
          ./vendor/laravel/dusk/bin/chromedriver-linux > /dev/null 2>&1 &

      - name: Dusk Test
        run: |
          php artisan serve > /dev/null 2>&1 &
          php artisan dusk

      - name: Sentry Release - PHP
        uses: getsentry/action-release@v1.1.5
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: adtrexa-php
        with:
          environment: production

      - name: Sentry Release - JS
        uses: getsentry/action-release@v1.1.5
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: adtrexa-js
        with:
          environment: production

      - name: Deploy to Development
        uses: joelwmale/webhook-action@2.1.0
        with:
          url: ${{ secrets.FORGE_DEPLOY_URL_PROD }}

  CodeCoverage:
    runs-on: ubuntu-latest
    name: Code Coverage
    steps:
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
          extensions: dom, curl, libxml, mbstring, zip
          tools: composer:v2
          coverage: xdebug

      - name: Checkout
        uses: actions/checkout@v2

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Install Dependencies
        run: |
          composer config "http-basic.nova.laravel.com" "${{ secrets.NOVA_USERNAME }}" "${{ secrets.NOVA_PASSWORD }}"
          composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Generate key
        run: php artisan key:generate

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: PHPUnit
        run: vendor/bin/phpunit --coverage-clover coverage.xml

      - name: Upload to CodeCov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODE_COV_UPLOAD_TOKEN }}
          files: ./coverage.xml
